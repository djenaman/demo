#!/bin/sh
awsProjectARN="arn:aws:devicefarm:us-west-2:249933210673:project:3ecc7790-408c-47ae-844f-fd1f0afd6a1d"
awsDevicePoolARN="arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-b33d66efa1f5"
awsTestSpecARN="arn:aws:devicefarm:us-west-2:249933210673:upload:3ecc7790-408c-47ae-844f-fd1f0afd6a1d/b062c5b5-dd26-41ea-a0e7-4fb78d7791a7"
awsTestRunName="testAWSCLIRUN"
awsTestType="APPIUM_JAVA_TESTNG"
apkLocation="/home/dipak/Downloads/app-release.apk"
testPackageLocation="/home/dipak/xml-data/build-dir/PRUD-PCA-JOB1/prudentialAutomation/target/prudentialAutomationArchive.zip"
echo "Script is uploading the APK file to AWS.... "
awsCreateAPKUploadJSONResponse=`aws devicefarm create-upload --project-arn $awsProjectARN --name app.apk --type ANDROID_APP`
awsAPKARN=`echo "$awsCreateAPKUploadJSONResponse"|jq -r '.upload.arn'`
echo "APKARN response = $awsCreateAPKUploadJSONResponse"
awsAPKUploadSignURL=`echo "$awsCreateAPKUploadJSONResponse"|jq -r '.upload.url'`
`curl -T $apkLocation "$awsAPKUploadSignURL"`
echo "Script is uploading the maven application zip file to AWS"
awsCreateTestPackageUploadJSONResponse=`aws devicefarm create-upload --project-arn $awsProjectARN --name prudentialAutomationArchive.zip --type APPIUM_JAVA_TESTNG_TEST_PACKAGE`
echo "TESTPACK response = $awsCreateTestPackageUploadJSONResponse"
awsTestPackageUploadSignURL=`echo "$awsCreateTestPackageUploadJSONResponse"|jq -r '.upload.url'`
awsTestPackageARN=`echo "$awsCreateTestPackageUploadJSONResponse"|jq -r '.upload.arn'`
`curl -T $testPackageLocation "$awsTestPackageUploadSignURL"`
echo "Script is scheduling the run with above uploaded files and configuration"
awsScheduleRunJSONResponse=`aws devicefarm schedule-run --project-arn $awsProjectARN --app-arn $awsAPKARN --device-pool-arn $awsDevicePoolARN --name $awsTestRunName --test testSpecArn=$awsTestSpecARN","type=$awsTestType","testPackageArn=$awsTestPackageARN`
awsScheduleRunARN=`echo "$awsScheduleRunJSONResponse"|jq -r '.run.arn'`
